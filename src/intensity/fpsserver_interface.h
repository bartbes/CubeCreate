
// Copyright 2010 Alon Zakai ('kripken'). All rights reserved.
// This file is part of Syntensity/the Intensity Engine, an open source project. See COPYING.txt for licensing.

struct fpsserver;

//! The fpsserver class is critical in Sauerbraten, but it is accessible only to its interior
//! members, which are generated by including them in. Instead, we allow interfacing with that
//! class to our exterior systems through this interface.

struct FPSServerInterface
{
    //! The instace of the fpsserver that we work with (a singleton)
    static fpsserver* fpsserverInstance;

    //! Gets the number of clients connected to the server. The range 0..this number is valid for clients, BUT not all may be
    //! full - check for NULLs. This is how Sauer works, entries are in the same place as their clientnumber
    static int getNumClients();

    //! Gets the username of a connected client (modifiable)
    static std::string& getUsername(int clientNumber);

    //! Gets the uniqueId of a connected client (modifiable)
    static int&         getUniqueId(int clientNumber);

    //! Changes the active map
    static void         changeMap(std::string name);

    static void cleanWorldState(ENetPacket *packet);
};

