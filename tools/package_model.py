
# Copyright 2010 Alon Zakai ('kripken'). All rights reserved.
# This file is part of Syntensity/the Intensity Engine, an open source project. See COPYING.txt for licensing.

import os, sys, shutil
import fnmatch, glob

src_dir = sys.argv[1]
dest_dir = sys.argv[2]

print "Packaging a model from %s to %s" % (src_dir, dest_dir)

if not os.path.exists(dest_dir):
    os.makedirs(dest_dir)

# Image files

exts = {}
for suff in ['cc', 'nm', 'sc']:
    exts[suff] = {}
    for match in glob.glob(os.path.join(src_dir, '*_' + suff + '.*')):
        ext = match.split('.')[-1] # jpg, png, dds, etc.
        exts[suff][ext] = True
        shutil.copyfile(match, os.path.join(dest_dir, suff + '.' + ext))

# md5mesh file

md5mesh_file = glob.glob(os.path.join(src_dir, '*.md5mesh'))[0]
md5mesh = open(md5mesh_file, 'r').readlines()
out = open(os.path.join(dest_dir, 'mesh.md5mesh'), 'w')
meshindex = 0
for line in md5mesh:
    out.write(line)
    if 'mesh {' in line:
        out.write('\t// meshes: Mesh%d\n\n' % meshindex)
        meshindex += 1
out.close()
num_meshes = meshindex

# Animations

idle_anim = None

anims = []
for match in glob.glob(os.path.join(src_dir, '*.md5anim')):
    shutil.copyfile(match, os.path.join(dest_dir, os.path.basename(match)))
    match = os.path.basename(match)
    if idle_anim is None:
        idle_anim = match
    else:
        anims.append(match)

#
# Cfg
#

out = open(os.path.join(dest_dir, 'md5.js'), 'w')
out.write('''
//// Autogenerated md5.js file

''')
location = dest_dir.split(os.path.sep)
location = location[location.index('models')+1:]
location = '/'.join(location) # Even on Windows, use *NIX separator
if location[-1] == '/': location = location[0:-1]
out.write('Model.md5Load("mesh.md5mesh", "%s");\n' % location)

# Images

def make_image_text(suff):
    if exts[suff].get('png', False):
        return suff + '.png'
    elif exts[suff].get('dds', False):
        return '<dds>' + suff + '.jpg'
    elif exts[suff].get('jpg', False):
        return suff + '.jpg'
    else:
        return '?X?'

out.write('''
for (var i = 0; i < %d; i++) {
    Model.md5Skin('Mesh' + i, '%s', '%s', 5, 1);
    Model.md5Bumpmap('Mesh' + i, '%s');
}
''' % tuple([num_meshes] + (map(make_image_text, ['cc', 'sc', 'nm']))))

# Animations

if idle_anim is not None:
    out.write('''
Model.md5Anim("idle", "%s", 30, 1);''' % idle_anim)

index = 40
for anim in anims:
    out.write('''
Model.md5Anim("%d", "%s", 30, 1);''' % (index, anim))
    index += 1

# Final stuff

out.write('''

Model.md5Pitch('', 1.0, 0, -90, 90);
Model.scale("100");
//Model.trans(0, 0, -1);

''')

